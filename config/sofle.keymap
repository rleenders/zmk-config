
  /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
  */

  #include <behaviors.dtsi>
  #include <dt-bindings/zmk/keys.h>
  #include <dt-bindings/zmk/bt.h>
  #include <dt-bindings/zmk/ext_power.h>

  / {
    keymap {
      compatible = "zmk,keymap";
  layer0 {
          bindings = <
          &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp ESCAPE &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &kp BACKSPACE &kp TAB &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L &kp SEMICOLON &kp SINGLE_QUOTE &kp LEFT_SHIFT &kp Z &kp X &kp C &kp V &kp B &kp C_MUTE &kp F20 &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RIGHT_SHIFT &kp LEFT_GUI &kp LEFT_ALT &kp LEFT_CONTROL &mo 2 &kp SPACE &kp ENTER &mo 3 &kp RIGHT_CONTROL &kp RIGHT_ALT &kp RIGHT_GUI
          >;
        };layer1 {
          bindings = <
          &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp GRAVE &kp ESCAPE BL_TOGG BL_STEP BL_INC BL_DEC &kp G RGB_M_P RGB_M_B RGB_M_R RGB_M_SW &kp SEMICOLON &kp BACKSPACE &kp TAB RGB_TOG RGB_MOD RGB_RMOD RGB_HUI RGB_HUD RGB_M_SN RGB_M_K RGB_M_X RGB_M_G RGB_M_T &kp SINGLE_QUOTE &kp LEFT_SHIFT RGB_SAI RGB_SAD RGB_SPI RGB_SPD &kp B &kp C_MUTE &kp F20 &kp K &kp M &kp COMMA &kp DOT &kp SLASH &kp RIGHT_SHIFT &kp LEFT_GUI &kp LEFT_ALT &kp LEFT_CONTROL &mo 2 &kp SPACE &kp ENTER &mo 3 &kp RIGHT_CONTROL &kp RIGHT_ALT &kp RIGHT_GUI
          >;
        };layer2 {
          bindings = <
          &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp F12 &trans KC_EXLM KC_AT KC_HASH KC_DLR KC_PERC KC_CIRC KC_AMPR KC_ASTR KC_LPRN KC_RPRN KC_PIPE &trans &kp EQUAL &kp MINUS KC_PLUS KC_LCBR KC_RCBR &trans &trans &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp SEMICOLON KC_COLN &kp BACKSLASH &trans &trans &trans &trans &trans &trans &trans &mo 4 &trans &trans &trans
          >;
        };layer3 {
          bindings = <
          &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp INSERT &kp PRINTSCREEN &kp K_APPLICATION &kp F20 &kp F20                          KC_PGUP LCTL(KC_LEFT) &kp UP LCTL(KC_RGHT) LCTL(KC_BSPC) &kp BACKSPACE &trans &kp LEFT_ALT &kp LEFT_CONTROL &kp LEFT_SHIFT &kp F20 &kp CAPSLOCK                          KC_PGDN &kp LEFT &kp DOWN &kp RIGHT &kp DELETE &kp BACKSPACE &trans LCTL(KC_Z) LCTL(KC_X) LCTL(KC_C) LCTL(KC_V) &kp F20 &trans &trans &kp F20 &kp HOME &kp F20 &kp END &kp F20 &trans &trans &trans &trans &mo 4 &trans &trans &trans &trans &trans &trans
          >;
        };layer4 {
          bindings = <
          &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 QK_BOOT &kp F20 DF(0) DF(1) CG_TOGG &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 CG_TOGG &kp F20 &kp F20 &kp F20 &kp F20 &kp C_VOLUME_DOWN &kp C_MUTE &kp C_VOLUME_UP &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT &kp F20 &kp F20 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
          >;
        };
    };
  };
  